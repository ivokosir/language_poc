module         → blockBody? EOF ;

block          → "(" blockBody ")"
blockBody      → expression ( ";" expression )* ;

expression     → block | definition ;

definition     → IDENTIFIER "=" definition
               | if;

if             → "if" expression "then" expression "else" expression "end"
               | logic_or;

logic_or       → logic_and ( "or" logic_and )* ;
logic_and      → equality ( "and" equality )* ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition       → multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication → primary ( ( "/" | "*" ) primary )* ;

primary        → "true" | "false" | "nil" | "this"
               | NUMBER | STRING | IDENTIFIER | block ;

NUMBER         → DIGIT+ ;
STRING         → '"' <any char except '"'>* '"' ;
IDENTIFIER     → ALPHA ( ALPHA | DIGIT )* ;
ALPHA          → 'a' ... 'z' | 'A' ... 'Z' | '_' ;
DIGIT          → '0' ... '9' ;
